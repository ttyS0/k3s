kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: beezuscomplex
  namespace: ghost
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: beezuscomplex
  namespace: ghost
spec:
  selector:
    matchLabels:
      app: beezuscomplex
  replicas : 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: beezuscomplex
    spec:
      nodeName: elrond
      containers:
        - image: library/ghost:4.22.4
          name: ghost-beezuscomplex
          env:
            - name: database__connection__user
              valueFrom:
                secretKeyRef:
                  name: beezuscomplex-db
                  key: dbuser
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: beezuscomplex-db
                  key: dbpass
          ports:
            - containerPort: 2368
          volumeMounts:
            - name: beezuscomplex
              mountPath: /var/lib/ghost/content
            - name: beezuscomplex-conf
              mountPath: /var/lib/ghost/config.production.json
              subPath: config.production.json
      volumes:
        - name: beezuscomplex
          persistentVolumeClaim:
            claimName: beezuscomplex
        - name: beezuscomplex-conf
          configMap:
            name: beezuscomplex-conf
            items:
              - key: production.json
                path: config.production.json

---
apiVersion: v1
kind: Service
metadata:
  name: beezuscomplex
  namespace: ghost
  labels:
    app: beezuscomplex
spec:
  ports:
    - name: server
      port: 80
      targetPort: 2368
  selector:
    app: beezuscomplex
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ghost
  name: beezuscomplex-conf
data:
  production.json: |
    {
      "url": "https://beezuscomplex.com",
      "server": {
        "port": 2368,
        "host": "0.0.0.0"
      },
      "database": {
        "client": "mysql",
        "connection": {
          "host": "mariadb.db.svc",
          "port": 3306,
          "database": "ghost_beezuscomplex"
        }
      },
      "logging": {
        "transports": [
          "stdout"
        ]
      },
      "paths": {
        "contentPath": "/var/lib/ghost/content"
      }
    }

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: beezuscomplex
  namespace: ghost
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    kubernetes.io/tls-acme: "true"
spec:
  rules:
    - host: beezuscomplex.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: beezuscomplex
                port:
                  number: 80
  tls:
    - hosts:
        - beezuscomplex.com
        - www.beezuscomplex.com
      secretName: beezuscomplex-com-cert

