
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nextcloud-data
  namespace: nextcloud
spec:
  capacity:
    storage: 10Ti
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  mountOptions:
    - nfsvers=4.1
  nfs:
    path: /nextcloud
    server: 10.0.1.55
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-data
  namespace: nextcloud
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Ti
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: nextcloud
  labels:
    app.kubernetes.io/name: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nextcloud
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nextcloud
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: nextcloud
          image: library/nextcloud:23.0.0-apache
          imagePullPolicy: IfNotPresent
          env:
            - name: OVERWRITEPROTOCOL
              value: "https"
            - name: POSTGRES_HOST
              value: "postgres.db.svc"
            - name: POSTGRES_DB
              value: "nextcloud"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: "user"
                  name: nextcloud-db
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db
                  key: "passwd"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/html
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: nextcloud-data
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
  namespace: nextcloud
  labels:
    app.kubernetes.io/name: nextcloud
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nextcloud
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nextcloud
  namespace: nextcloud
  labels:
    app.kubernetes.io/name: nextcloud
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  rules:
    - host: "nc.skj.dev"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nextcloud
                port:
                  number: 80
  tls:
    - hosts:
        - nc.skj.dev
      secretName: nc-skj-dev-cert

